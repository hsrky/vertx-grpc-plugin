{{#packageName}}
package {{packageName}};
{{/packageName}}

import io.vertx.core.Future;
import io.vertx.core.Handler;
import io.vertx.core.Vertx;
import io.vertx.core.http.HttpServerRequest;
import io.vertx.grpc.server.GrpcServer;
import io.vertx.grpc.server.GrpcServerRequest;

import java.util.ArrayList;
import java.util.List;

public class {{className}}  {
    private final GrpcServer server;

    public {{className}}(Vertx vertx) {
        this.server = GrpcServer.server(vertx);
    }

    public interface {{serviceName}}Api {
{{#unaryMethods}}
        Future<{{outputType}}> {{methodName}}({{inputType}} request);
{{/unaryMethods}}
{{#streamMethods}}
        void {{methodName}}(GrpcServerRequest<{{inputType}}, {{outputType}}> request);
{{/streamMethods}}
    }

    public {{className}} callHandlers({{serviceName}}Api implementation) {
{{#unaryMethods}}
        server.callHandler({{serviceName}}Grpc.{{methodNameGetter}}(), request ->
                request.handler(req -> implementation.{{methodName}}(req)
                    .onSuccess(resp -> request.response().end(resp))
                ));
{{/unaryMethods}}
{{#streamMethods}}
        server.callHandler({{serviceName}}Grpc.{{methodNameGetter}}(), request -> implementation.{{methodName}}(request));
{{/streamMethods}}
        return this;
    }

    public Handler<HttpServerRequest> getGrpcServer() {
        return server;
    }
}